@model PaginatedProjectViewModel
@{
    string pageNumber = Context.Request.Query["PageNumber"].ToString();
    int currentPage = String.IsNullOrEmpty(pageNumber) ? 1 : int.Parse(pageNumber);
}
<div class="row">
    @foreach (var item in Model.AllProjects)
    {
        <div class="project col-md-6">
            <a asp-action="Get" asp-controller="Projects" asp-route-projectId="@item.Id" class="m-2">
                <div class="card">
                    <div class="card-header">
                        <div style="display:flex;">
                            <b class="text-dark" style="margin-right:auto;">
                                @item.Name
                            </b>
                        </div>
                    </div>
                    <div class="card-body">
                        <p class="card-text text-secondary">@item.ShortDescription</p>
                    </div>
                </div>
            </a>
        </div>
    }
</div>

@*Pagination*@
<div>
    <nav aria-label="Page navigation example">
        <ul class="pagination" style="justify-content: center;">
            @if (currentPage > 2)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="GetAll" asp-route-PageNumber="1" aria-label="First">
                        <span aria-hidden="true">&laquo;&laquo;</span>
                        <span class="sr-only"></span>
                    </a>
                </li>
            }
            <li class="page-item">
                <a class="page-link" asp-action="GetAll" asp-route-PageNumber="@(currentPage - 1)" aria-label="First">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
            @if (currentPage > 2)
            {
                <li class="page-item disabled">
                    <a class="page-link">
                        ...
                    </a>
                </li>
            }
            @for (int i = currentPage; i < currentPage + 3; i++)
            {
                if ((i - 1 != 0) ^ (i - 1 > Model.TotalPages))
                {
                    if (i - 1 == currentPage)
                    {
                        <li class="page-item disabled">
                            <a class="page-link" asp-action="GetAll" asp-route-PageNumber="@(i - 1)">
                                @(i - 1)
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="GetAll" asp-route-PageNumber="@(i - 1)">
                                @(i - 1)
                            </a>
                        </li>
                    }

                }
            }
            @if (currentPage + 1 < Model.TotalPages)
            {
                <li class="page-item disabled">
                    <a class="page-link">
                        ...
                    </a>
                </li>
            }
            <li class="page-item">
                <a class="page-link" asp-action="GetAll" asp-route-PageNumber="@(currentPage + 1)" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
            @if (currentPage + 1 < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="GetAll" asp-route-PageNumber="@Model.TotalPages" aria-label="Next">
                        <span aria-hidden="true">&raquo;&raquo;</span>
                        <span class="sr-only">Next</span>
                    </a>
                </li>
            }

        </ul>
    </nav>
</div>